// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiendaOnline.Infrastructure.Data;

#nullable disable

namespace TiendaOnline.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TiendaOnline.Domain.Models.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorNombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ColorId");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.ProductoColor", b =>
                {
                    b.Property<int>("ProductoColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoColorId"));

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.HasKey("ProductoColorId");

                    b.HasIndex("ColorId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ProductoColores");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.ProductoTalla", b =>
                {
                    b.Property<int>("ProductoTallaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoTallaId"));

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("TallaId")
                        .HasColumnType("int");

                    b.HasKey("ProductoTallaId");

                    b.HasIndex("ProductoId");

                    b.HasIndex("TallaId");

                    b.ToTable("ProductoTallas");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.Talla", b =>
                {
                    b.Property<int>("TallaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TallaId"));

                    b.Property<string>("TallaNombre")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("TallaId");

                    b.ToTable("Tallas");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.ProductoColor", b =>
                {
                    b.HasOne("TiendaOnline.Domain.Models.Color", "Color")
                        .WithMany("ProductoColores")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Domain.Models.Producto", "Producto")
                        .WithMany("ProductoColores")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.ProductoTalla", b =>
                {
                    b.HasOne("TiendaOnline.Domain.Models.Producto", "Producto")
                        .WithMany("ProductoTallas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TiendaOnline.Domain.Models.Talla", "Talla")
                        .WithMany("ProductoTallas")
                        .HasForeignKey("TallaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Talla");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.Color", b =>
                {
                    b.Navigation("ProductoColores");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.Producto", b =>
                {
                    b.Navigation("ProductoColores");

                    b.Navigation("ProductoTallas");
                });

            modelBuilder.Entity("TiendaOnline.Domain.Models.Talla", b =>
                {
                    b.Navigation("ProductoTallas");
                });
#pragma warning restore 612, 618
        }
    }
}
